# blast_search.yaml
name: "blast_search"
version: "1.4.0"
description: "Perform BLAST sequence similarity search against various databases. Supports nucleotide and protein sequences with comprehensive search options."
category: "external_apis"
keywords: ["blast", "search", "similarity", "alignment", "database", "sequence", "homology"]
priority: 1

# Tool execution metadata
execution:
  type: "server"
  timeout: 120000
  retries: 2
  requires_auth: false
  requires_data: false
  requires_network: true

# Input parameters (JSON Schema format)
parameters:
  type: "object"
  properties:
    sequence:
      type: "string"
      description: "Query sequence (DNA or protein)"
      examples: ["ATGCGCTATCG", "MKELLKAGWKELQP", "ATGAAAGAATTGAAAGAAGCTGGCTGG"]
    blastType:
      type: "string"
      enum: ["blastn", "blastp", "blastx", "tblastn", "tblastx"]
      description: "Type of BLAST search to perform"
      default: "blastn"
    database:
      type: "string"
      description: "Target database for search"
      default: "nr"
      examples: ["nr", "nt", "refseq_genomic", "refseq_protein", "swissprot"]
    evalue:
      type: "string"
      description: "E-value threshold for significance"
      default: "0.01"
      examples: ["0.01", "1e-5", "10", "1e-10"]
    maxTargets:
      type: "number"
      description: "Maximum number of target sequences to return"
      default: 50
      minimum: 1
      maximum: 1000
    wordSize:
      type: "number"
      description: "Word size for initial matches"
      default: null
      minimum: 2
      maximum: 128
    matrix:
      type: "string"
      description: "Scoring matrix for protein searches"
      default: "BLOSUM62"
      examples: ["BLOSUM62", "BLOSUM45", "BLOSUM80", "PAM30", "PAM70"]
    gapCosts:
      type: "string"
      description: "Gap costs (existence, extension)"
      default: "5,2"
      examples: ["5,2", "2,1", "10,1"]
    filter:
      type: "string"
      description: "Low complexity filtering"
      default: "F"
      enum: ["T", "F"]
    organism:
      type: "string"
      description: "Limit search to specific organism"
      default: null
      examples: ["Escherichia coli", "Homo sapiens", "Saccharomyces cerevisiae"]
    clientId:
      type: "string"
      description: "Browser client ID for multi-window support"
      default: "default"
  required: ["sequence", "blastType", "database"]

# High-quality examples for few-shot learning
sample_usages:
  - user_query: "BLAST this DNA sequence against the nucleotide database"
    tool_call: "blast_search(sequence='ATGCGCTATCG', blastType='blastn', database='nt', evalue='0.01')"
    thought: "User wants to find similar DNA sequences using BLASTn"
    expected_result: "List of similar nucleotide sequences with alignment scores and E-values"

  - user_query: "Search for similar proteins to this sequence"
    tool_call: "blast_search(sequence='MKELLKAGWKELQP', blastType='blastp', database='nr', maxTargets=20)"
    thought: "User wants protein similarity search using BLASTp"
    expected_result: "List of similar proteins with detailed alignment information"

  - user_query: "Find homologous genes in E. coli only"
    tool_call: "blast_search(sequence='ATGAAAGAATTGAAAGAAGCTGGCTGG', blastType='blastn', database='nt', organism='Escherichia coli')"
    thought: "User wants to restrict search to E. coli genome only"
    expected_result: "E. coli specific homologous sequences"

  - user_query: "High-stringency protein search with BLOSUM80"
    tool_call: "blast_search(sequence='MKELLKAGWKELQP', blastType='blastp', database='swissprot', evalue='1e-10', matrix='BLOSUM80')"
    thought: "User wants high-stringency protein search with specific scoring matrix"
    expected_result: "High-confidence protein matches with detailed alignments"

# Tool relationships and dependencies
relationships:
  depends_on: []
  conflicts_with: []
  enhances: ["search_protein_by_gene", "analyze_interpro_domains"]
  alternatives: ["advanced_blast_search", "batch_blast_search"]
  prerequisites: []
  follow_up: ["get_uniprot_entry", "search_alphafold_by_gene", "analyze_region"]

# Performance and usage statistics
metadata:
  usage_count: 0
  success_rate: 0.0
  avg_execution_time: 0
  last_used: null
  tags: ["blast", "search", "similarity", "external", "essential"]
  complexity: "moderate"
  usage_pattern: "frequent"

# Error handling
error_handling:
  invalid_sequence: "Returns error if sequence contains invalid characters"
  database_error: "Returns error if BLAST database is unavailable"
  network_timeout: "Returns error if BLAST service times out"
  parameter_error: "Returns error if BLAST parameters are invalid"
  no_results: "Returns empty result if no significant matches found"

# Return value specification
returns:
  success: "boolean - Whether BLAST search was successful"
  query_info: "object - Query sequence information and parameters"
  results: "array - List of BLAST hits with alignment details"
  hit_details: "object - For each hit: accession, description, score, evalue, identity, coverage"
  alignment_data: "array - Detailed alignment information for each hit"
  search_statistics: "object - Search parameters and execution statistics"
  database_info: "object - Target database information"
  execution_time: "number - Search execution time in milliseconds"
