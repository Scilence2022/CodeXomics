# list_plugins.yaml
name: "list_plugins"
version: "1.2.0"
description: "List all available plugins in the system, including installed, enabled, and marketplace plugins. Provides comprehensive plugin information and status."
category: "plugin_management"
keywords: ["list", "plugins", "installed", "enabled", "marketplace", "status", "management"]
priority: 2

# Tool execution metadata
execution:
  type: "client"
  timeout: 15000
  retries: 2
  requires_auth: false
  requires_data: false
  requires_network: true

# Input parameters (JSON Schema format)
parameters:
  type: "object"
  properties:
    status:
      type: "string"
      enum: ["all", "installed", "enabled", "disabled", "available", "outdated"]
      description: "Filter plugins by status"
      default: "all"
    category:
      type: "string"
      description: "Filter plugins by category (e.g., 'analysis', 'visualization', 'database')"
      default: null
    search_term:
      type: "string"
      description: "Search term to filter plugins by name or description"
      default: null
    include_functions:
      type: "boolean"
      description: "Whether to include available functions for each plugin"
      default: true
    include_metadata:
      type: "boolean"
      description: "Whether to include detailed metadata (version, author, dependencies)"
      default: true
    sort_by:
      type: "string"
      enum: ["name", "version", "status", "last_used", "popularity"]
      description: "Sort plugins by specified field"
      default: "name"
    limit:
      type: "number"
      description: "Maximum number of plugins to return"
      default: 50
      minimum: 1
      maximum: 200
    clientId:
      type: "string"
      description: "Browser client ID for multi-window support"
      default: "default"
  required: []

# High-quality examples for few-shot learning
sample_usages:
  - user_query: "Show me all installed plugins"
    tool_call: "list_plugins(status='installed', include_functions=true)"
    thought: "User wants to see all currently installed plugins with their functions"
    expected_result: "List of installed plugins with names, versions, and available functions"

  - user_query: "What plugins are available for sequence analysis?"
    tool_call: "list_plugins(category='analysis', status='available', include_metadata=true)"
    thought: "User wants to find plugins specifically for sequence analysis"
    expected_result: "Available sequence analysis plugins with descriptions and metadata"

  - user_query: "List enabled plugins sorted by popularity"
    tool_call: "list_plugins(status='enabled', sort_by='popularity', limit=10)"
    thought: "User wants the most popular enabled plugins"
    expected_result: "Top 10 most popular enabled plugins"

  - user_query: "Search for BLAST-related plugins"
    tool_call: "list_plugins(search_term='blast', include_functions=true, include_metadata=true)"
    thought: "User is looking for plugins related to BLAST functionality"
    expected_result: "All plugins containing 'blast' in name or description"

# Tool relationships and dependencies
relationships:
  depends_on: []
  conflicts_with: []
  enhances: ["get_plugin_info", "install_plugin", "enable_plugin"]
  alternatives: []
  prerequisites: []
  follow_up: ["get_plugin_info", "install_plugin", "enable_plugin", "disable_plugin"]

# Performance and usage statistics
metadata:
  usage_count: 0
  success_rate: 0.0
  avg_execution_time: 0
  last_used: null
  tags: ["plugin", "management", "list", "status"]
  complexity: "simple"
  usage_pattern: "common"

# Error handling
error_handling:
  plugin_system_error: "Returns error if plugin system is not available"
  network_error: "Returns error if marketplace connection fails"
  invalid_parameters: "Returns error if filter parameters are invalid"
  timeout: "Returns error if plugin loading takes too long"

# Return value specification
returns:
  success: "boolean - Whether listing was successful"
  plugins: "array - List of plugin objects"
  total_count: "number - Total number of plugins found"
  filtered_count: "number - Number of plugins after filtering"
  plugin_details: "object - For each plugin: id, name, version, status, functions, metadata"
  categories: "array - Available plugin categories"
  status_summary: "object - Count of plugins by status"
  search_metadata: "object - Search parameters and execution time"
