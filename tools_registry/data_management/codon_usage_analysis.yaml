name: codon_usage_analysis
version: 1.0.0
description: Analyze codon usage patterns in DNA coding sequence with comprehensive statistics and visualization. Supports analysis by direct sequence input, gene name, or locus tag.
category: data_management
keywords:
  - codon
  - usage
  - analysis
  - dna
  - coding
  - sequence
  - frequency
  - bias
  - statistics
  - gene
  - locus
  - geneName
  - locusTag
priority: 2
execution:
  type: client
  timeout: 30000
  retries: 3
  requires_auth: false
  requires_data: false
  requires_network: false
parameters:
  type: object
  properties:
    sequence:
      type: string
      description: DNA sequence to analyze (must contain only A, T, G, C nucleotides). Alternative to geneName/locusTag.
      minLength: 3
      pattern: "^[ATGC]+$"
      examples:
        - "ATGGCTAGCTAGCTAGCTAG"
        - "ATGAAACCCGGGTTT"
    geneName:
      type: string
      description: Gene name to analyze (e.g., 'lacZ', 'araA'). Alternative to sequence/locusTag.
      examples:
        - "lacZ"
        - "araA"
        - "trpA"
    locusTag:
      type: string
      description: Locus tag to analyze (e.g., 'b0001', 'b0002'). Alternative to sequence/geneName.
      examples:
        - "b0001"
        - "b0002"
        - "b0003"
    chromosome:
      type: string
      description: Chromosome/contig name (optional, uses current chromosome if not specified)
      default: "current"
    clientId:
      type: string
      description: Browser client ID for multi-window support
      default: default
    include_statistics:
      type: boolean
      description: Whether to include detailed codon frequency statistics
      default: true
    normalize_sequence:
      type: boolean
      description: Whether to normalize sequence (remove N's, convert to uppercase)
      default: true
    genetic_code:
      type: string
      description: Genetic code to use for analysis
      enum: ["standard", "vertebrate_mitochondrial", "yeast_mitochondrial", "mold_mitochondrial"]
      default: "standard"
    window_size:
      type: integer
      description: Window size for sliding window analysis (0 = analyze entire sequence)
      minimum: 0
      default: 0
    step_size:
      type: integer
      description: Step size for sliding window analysis
      minimum: 1
      default: 1
  required: []
  anyOf:
    - required: ["sequence"]
    - required: ["geneName"]
    - required: ["locusTag"]
sample_usages:
  - user_query: Analyze codon usage in this DNA sequence
    tool_call: codon_usage_analysis(sequence="ATGGCTAGCTAGCTAGCTAG", include_statistics=true, normalize_sequence=true)
    thought: User wants to analyze codon usage patterns in the provided DNA sequence
    expected_result: Detailed codon usage statistics and frequency analysis
  - user_query: codon usage analysis of lacZ gene
    tool_call: codon_usage_analysis(geneName="lacZ", include_statistics=true, genetic_code="standard")
    thought: User wants codon usage analysis for the lacZ gene by gene name
    expected_result: Codon frequency analysis showing usage bias and statistics for lacZ gene
  - user_query: analyze codon usage for locus tag b0001
    tool_call: codon_usage_analysis(locusTag="b0001", include_statistics=true, genetic_code="standard")
    thought: User wants codon usage analysis for the gene with locus tag b0001
    expected_result: Codon frequency analysis showing usage bias and statistics for gene b0001
  - user_query: codon usage analysis of araA gene on chromosome U00096
    tool_call: codon_usage_analysis(geneName="araA", chromosome="U00096", include_statistics=true)
    thought: User wants codon usage analysis for araA gene on specific chromosome
    expected_result: Codon frequency analysis for araA gene on chromosome U00096
relationships:
  depends_on: []
  conflicts_with: []
  enhances: []
  alternatives: []
  prerequisites: []
  follow_up: []
metadata:
  usage_count: 0
  success_rate: 0
  avg_execution_time: 0
  last_used: null
  tags:
    - data_management
    - important
  complexity: moderate
  usage_pattern: common
error_handling:
  invalid_sequence:
    error: "Sequence must contain only A, T, G, C nucleotides"
    solution: "Use normalize_sequence=true to clean the sequence, or provide a valid DNA sequence"
    retry: true
  empty_sequence:
    error: "Sequence is empty or too short"
    solution: "Provide a sequence with at least 3 nucleotides"
    retry: false
  invalid_genetic_code:
    error: "Invalid genetic code specified"
    solution: "Use one of: standard, vertebrate_mitochondrial, yeast_mitochondrial, mold_mitochondrial"
    retry: true
  analysis_failed:
    error: "Codon usage analysis failed"
    solution: "Check sequence validity and try again"
    retry: true
returns:
  success: "boolean - Whether operation was successful"
  result: "object - Analysis results including:
    - geneName: string - Gene name (if analyzed by gene name)
    - locusTag: string - Locus tag (if analyzed by locus tag)
    - gene: object - Gene information (if analyzed by gene name/locus tag)
    - totalCodons: number - Total number of codons analyzed
    - uniqueCodons: number - Number of unique codons found
    - codonUsage: array - Array of codon usage data with frequency percentages and RSCU values
    - aminoAcidComposition: object - Amino acid composition counts
    - codonPreferences: object - Codon preferences by amino acid showing:
      - aminoAcid: string - Single letter amino acid code
      - totalCount: number - Total count for this amino acid
      - synonymousCodons: number - Number of synonymous codons
      - codons: array - Detailed codon usage within amino acid including:
        - codon: string - Three-letter codon sequence
        - count: number - Number of occurrences
        - percentage: number - Percentage within amino acid group
        - rscu: number - Relative Synonymous Codon Usage value
        - preference: string - Classification (preferred/neutral/rare)
      - mostPreferred: string - Most frequently used codon for this amino acid
      - leastPreferred: string - Least frequently used codon for this amino acid
    - mostFrequentCodons: array - Top 10 most frequent codons
    - sequenceLength: number - Length of analyzed sequence
    - analysisType: string - Type of analysis performed (sequence/geneName/locusTag)"
  error: "string - Error message if success is false"
  error_type: "string - Type of error for proper handling"
