name: load_genome_file
version: 1.0.0
description: Load genome files in FASTA or GenBank format directly by file path
category: file_operations
keywords:
  - load
  - genome
  - fasta
  - genbank
  - sequence
priority: 1
execution:
  type: client
  timeout: 60000
  retries: 2
  requires_auth: false
  requires_data: false
  requires_network: false
parameters:
  type: object
  properties:
    filePath:
      type: string
      description: Absolute path to the genome file (FASTA or GenBank format)
      examples:
        - "/path/to/genome.fasta"
        - "/path/to/genome.fa"
        - "/path/to/genome.gb"
        - "/path/to/genome.gbk"
    fileFormat:
      type: string
      description: Format of the genome file
      enum:
        - "auto"
        - "fasta"
        - "genbank"
      default: "auto"
    replaceCurrent:
      type: boolean
      description: Whether to replace currently loaded genome data
      default: true
    validateFile:
      type: boolean
      description: Whether to validate file format before loading
      default: true
    clientId:
      type: string
      description: Browser client ID for multi-window support
      default: "default"
  required:
    - filePath

# High-quality examples for few-shot learning
sample_usages:
  - user_query: "Load the E. coli genome from /data/ecoli.fasta"
    tool_call: "load_genome_file(filePath='/data/ecoli.fasta', fileFormat='fasta')"
    thought: "User wants to load an E. coli genome file in FASTA format"
    expected_result: "Genome loaded successfully into the browser"

  - user_query: "Load GenBank file from /genomes/bacterium.gb and replace current data"
    tool_call: "load_genome_file(filePath='/genomes/bacterium.gb', fileFormat='genbank', replaceCurrent=true)"
    thought: "User wants to load a GenBank file and replace existing genome data"
    expected_result: "GenBank genome file loaded and current data replaced"

  - user_query: "Load genome file /data/sample.fasta without validation"
    tool_call: "load_genome_file(filePath='/data/sample.fasta', validateFile=false)"
    thought: "User wants to load a FASTA file without format validation"
    expected_result: "FASTA file loaded without validation checks"

  - user_query: "Auto-detect and load genome from /sequences/unknown_format.txt"
    tool_call: "load_genome_file(filePath='/sequences/unknown_format.txt', fileFormat='auto')"
    thought: "User wants to auto-detect file format and load the genome"
    expected_result: "File format auto-detected and genome loaded"

# Tool relationships and dependencies
relationships:
  depends_on: []
  conflicts_with: []
  enhances: ["navigate_to_position", "search_features", "analyze_region"]
  alternatives: []
  prerequisites: []
  follow_up: ["analyze_region", "search_gene_by_name", "export_data"]

# Performance and usage statistics
metadata:
  usage_count: 0
  success_rate: 0.0
  avg_execution_time: 0
  last_used: null
  tags: ["file", "load", "genome", "fasta", "genbank"]
  complexity: "simple"
  usage_pattern: "common"

# Error handling
error_handling:
  file_not_found: "Returns error if specified file path does not exist"
  invalid_format: "Returns error if file format is not supported"
  permission_denied: "Returns error if file cannot be read due to permissions"
  corrupted_file: "Returns error if file is corrupted or malformed"
  memory_limit: "Returns error if file is too large to load into memory"

# Return value specification
returns:
  success: "boolean - Whether file was loaded successfully"
  file_path: "string - Path of the loaded file"
  file_format: "string - Detected or specified file format"
  sequence_count: "number - Number of sequences loaded"
  sequence_names: "array - Names of loaded sequences/chromosomes"
  file_size: "number - Size of loaded file in bytes"
  load_time: "number - Time taken to load file in milliseconds"
  validation_passed: "boolean - Whether validation checks passed"
  error_message: "string - Error message if loading failed"