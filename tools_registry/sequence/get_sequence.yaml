# get_sequence.yaml
name: "get_sequence"
version: "1.3.0"
description: "Retrieve DNA sequence for a specific genomic region. Returns the raw sequence data and basic statistics."
category: "sequence"
keywords: ["sequence", "dna", "retrieve", "get", "extract", "genomic region", "nucleotide"]
priority: 1

# Tool execution metadata
execution:
  type: "client"
  timeout: 15000
  retries: 2
  requires_auth: false
  requires_data: true
  requires_network: false

# Input parameters (JSON Schema format)
parameters:
  type: "object"
  properties:
    chromosome:
      type: "string"
      description: "Chromosome name (e.g., 'chr1', 'NC_000913.3', 'U00096')"
      examples: ["chr1", "NC_000913.3", "U00096", "chromosome1"]
    start:
      type: "number"
      description: "Start position in base pairs (1-based coordinate)"
      minimum: 1
      examples: [1000, 50000, 1000000]
    end:
      type: "number"
      description: "End position in base pairs (1-based coordinate)"
      minimum: 1
      examples: [2000, 60000, 1002000]
    strand:
      type: "string"
      enum: ["+", "-", "both"]
      description: "Strand to retrieve (+ for forward, - for reverse, both for both strands)"
      default: "+"
    format:
      type: "string"
      enum: ["raw", "fasta", "genbank"]
      description: "Output format for the sequence"
      default: "raw"
    include_annotations:
      type: "boolean"
      description: "Whether to include gene/feature annotations in the output"
      default: false
    max_length:
      type: "number"
      description: "Maximum sequence length to retrieve (safety limit)"
      default: 1000000
      maximum: 10000000
    clientId:
      type: "string"
      description: "Browser client ID for multi-window support"
      default: "default"
  required: ["chromosome", "start", "end"]

# High-quality examples for few-shot learning
sample_usages:
  - user_query: "Get the DNA sequence from position 1000 to 2000"
    tool_call: "get_sequence(chromosome='chr1', start=1000, end=2000)"
    thought: "User wants the raw DNA sequence for a specific genomic region"
    expected_result: "DNA sequence string (e.g., 'ATGCGCTATCG...') with length 1001 bp"

  - user_query: "Extract the sequence around gene lacZ"
    tool_call: "get_sequence(chromosome='NC_000913.3', start=360000, end=365000, include_annotations=true)"
    thought: "User wants sequence around a specific gene with annotations"
    expected_result: "DNA sequence with gene annotations showing lacZ boundaries and features"

  - user_query: "Get both strands of the sequence from 50000 to 50100"
    tool_call: "get_sequence(chromosome='chr1', start=50000, end=50100, strand='both')"
    thought: "User wants both forward and reverse complement sequences"
    expected_result: "Object with both forward and reverse strand sequences"

  - user_query: "Export the sequence in FASTA format"
    tool_call: "get_sequence(chromosome='U00096', start=1000000, end=1001000, format='fasta')"
    thought: "User wants the sequence in standard FASTA format for export"
    expected_result: "FASTA formatted sequence with header line"

# Tool relationships and dependencies
relationships:
  depends_on: ["navigate_to_position"]
  conflicts_with: []
  enhances: ["compute_gc", "translate_dna", "find_orfs", "search_sequence_motif"]
  alternatives: ["get_coding_sequence"]
  prerequisites: []
  follow_up: ["compute_gc", "translate_dna", "reverse_complement", "analyze_region"]

# Performance and usage statistics
metadata:
  usage_count: 0
  success_rate: 0.0
  avg_execution_time: 0
  last_used: null
  tags: ["core", "sequence", "dna", "essential"]
  complexity: "simple"
  usage_pattern: "frequent"

# Error handling
error_handling:
  invalid_region: "Returns error if start > end or region is invalid"
  region_too_large: "Returns error if region exceeds max_length limit"
  chromosome_not_found: "Returns error if chromosome not found in loaded genome"
  position_out_of_bounds: "Returns error if positions exceed genome length"

# Return value specification
returns:
  success: "boolean - Whether sequence retrieval was successful"
  sequence: "string - The DNA sequence (raw or formatted)"
  length: "number - Length of the retrieved sequence"
  chromosome: "string - Source chromosome name"
  start: "number - Start position of the sequence"
  end: "number - End position of the sequence"
  strand: "string - Strand of the sequence"
  gc_content: "number - GC content percentage (if calculated)"
  annotations: "array - Gene/feature annotations (if requested)"
  format: "string - Output format used"
